Create a complete Weather Prediction Web App using Python, Streamlit, and scikit-learn. The app should:

1. **Data Handling**
   - Allow the user to upload weather datasets in CSV format.
   - Automatically clean the dataset (handle missing values, normalize data, etc.).
   - Display the uploaded dataset in a table format with filtering and sorting options.

2. **Data Visualization**
   - Show interactive diagrams using Plotly or Matplotlib:
     - Line charts of temperature, humidity, and rainfall over time.
     - Correlation heatmap of weather features.
     - Histogram of temperature distribution.

3. **Machine Learning Model**
   - Train a model (RandomForestRegressor or LSTM if possible) on the uploaded dataset to predict future weather conditions (temperature, rainfall, humidity).
   - Split the dataset into training and testing sets and show accuracy metrics (MAE, RMSE, RÂ²).
   - Allow users to select target variable (e.g., temperature, rainfall).
   - Save and load trained models for later use.

4. **Weather Forecasting**
   - Predict the weather for upcoming days (user specifies number of days).
   - Display predictions in both table and chart format.
   - Provide a confidence interval for predictions.

5. **UI / UX**
   - Clean interactive UI with Streamlit sidebar navigation:
     - "Upload Data"
     - "Explore Data"
     - "Train Model"
     - "Predict Weather"
   - Show progress bars during training.
   - Add download button for users to export predictions as CSV.

6. **Additional Features**
   - Add a sample dataset (like daily weather data) for demo.
   - Provide an option to compare multiple models (Linear Regression, Random Forest, Gradient Boosting).
   - Include a "Fun Insights" section that shows:
     - Hottest and coldest recorded days.
     - Rainiest week.
     - Average temperature trends.

Make sure the app is production-ready, well-commented, and runs smoothly in Replit. Include a `requirements.txt` with necessary dependencies (streamlit, pandas, numpy, scikit-learn, matplotlib, plotly, seaborn).
